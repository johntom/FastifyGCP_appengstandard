 'use strict'

const fp = require('fastify-plugin');
// const fastifySession = require('@fastify/session');
// const fastifyCookie = require('@fastify/cookie');


const fs = require('fs');
const path = require('node:path')
const SESSION_SECRET = "a secret with minimum length of 32 characters";
// const SESSION_TTL = 86400; // 
// 86400= 1 day in seconds
// 60 seconds 1 min
// 3600 = 1 hr
// 1800 = 1/2 hr
const SESSION_TTL = 86400;
// 3600 = 1 hr 60 = 1 min

module.exports = fp(async (fastify, opts) => {


    fastify.register(require('@fastify/secure-session'), {
        // the name of the attribute decorated on the request-object, defaults to 'session'
        sessionName: 'session',
        // the name of the session cookie, defaults to value of sessionName
        cookieName: 'my-session-cookie',
        // adapt this to point to the directory where secret-key is located
        key: fs.readFileSync(path.join(__dirname, 'secret-key')),
        expires: SESSION_TTL,
        domain: 'https://calm-rainfall-360818.uk.r.appspot.com/',

        cookie: {
          path: '/'
          // options for setCookie, see https://github.com/fastify/fastify-cookie
        //  , expires: SESSION_TTL
        }
      })



//   const corsOpts = Object.assign ({}, {
//     origin: '*',
//     methods: ['DELETE','GET','POST','PUT']
//   }, opts.cors);

//  fastify.register(fastifySession, {secret: 'a secret with minimum length of 32 characters'});

// fastify.register(fastifyCookie);




// fastify.register(fastifySession, {
//     cookieName: 'sessionId',
//     secret: 'a secret with minimum length of 32 characters',
//     cookie: { secure: false },
//     expires: SESSION_TTL
//   })

//    fastify.register(fastifyCookie);

//   fastify.register(fastifySession, {
  
//     secret: SESSION_SECRET,
//     saveUninitialized: false,
//     cookie: {
//       httpOnly: true,
//       secure: process.env.NODE_ENV !== 'development',
//       maxAge: 86400 * 1000, // 1 day expiration time
//     },
//   });



});

//  const sOpts = Object.assign ({}, {

// //     cookieName: 'sessionId',
//      secret: 'a secret with minimum length of 32 characters',
//      cookie: { secure: false },
//      expires: SESSION_TTL
//    })

//    fastify.register(fastifySession, sOpts);
//  });


// 'use strict'
// //const fastify = require('fastify');
// const fp = require('fastify-plugin');

// const fastifySession = require('fastify-session');
// const fastifyCookie = require('fastify-cookie');

// // const app = fastify();
// module.exports = fp(async (fastify, opts) => {
//   fastify.register(fastifyCookie);
// // app.register(fastifySession, {secret: 'a secret with minimum length of 32 characters'});
// // Store data in the session by adding it to the session decorator at the request:

// fastify.register(fastifySession, {secret: 'a secret with minimum length of 32 characters'});
// fastify.addHook('preHandler', (request, reply, next) => {
//   request.session.user = {name: 'max'};
//   next();
// })
// // fastify.register(fastifySession, sOpts);
// });